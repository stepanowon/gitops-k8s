# github repo에서 vagrantfile을 내려받아 설치
git clone https://github.com/stepanowon/k8s-on-win
cd k8s-on-win
vagrant up

# 설치가 완료된 후 reload
vagrant reload

# 사용자명과 초기 패스워드 : user1/asdf
# virtualbox 확장 팩 설치
sudo apt-get install -y virtualbox-ext-pack


# kubeadm을 이용한 k8s cluster 초기화
sudo kubeadm init --apiserver-advertise-address=192.168.56.201 --pod-network-cidr=10.244.0.0/16

# kubeconfig 파일을 로컬 master의 vagrant 사용자의 홈디렉토리에 복사
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

# kubectl 도구가 설치된 다른 컴퓨터를 이용하고 싶다면 ~/.kube/config 파일을 복사하여 사용함
# kubectl 자동완성 기능과 kubectl --> k로 사용하기
sudo apt install bash-completion
source /usr/share/bash-completion/bash_completion

echo 'source <(kubectl completion bash)' >>~/.bashrc
echo 'alias k=kubectl' >>~/.bashrc
echo 'complete -F __start_kubectl k' >>~/.bashrc

source ~/.bashrc


## calico CNI 설치
kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.29.2/manifests/tigera-operator.yaml
kubectl create -f ~/vagrant/conf/calico-resources.yaml




## 설치 확인
$ kubectl get pods --all-namespaces

## worker1, worker2에 ssh 접속 후 다음 명령어 실행
# 마스터에서 kubeadm init 명령어 수행후 콘솔에 출력된 join 명령어를 실행함. 형식은 다음과 같음
$ sudo kubeadm join 192.168.56.201:6443 --token <token> --discovery-token-ca-cert-hash sha256:<hash>

# 만일 token과 hash 값을 알수 없다면 다음 명령어 실행하여 확인
# kubeadm token list
# kubeadm token create --print-join-command

# worker2(192.168.56.203)에서도 동일하게 kubeadm join 할것


## master에 ssh로 접속한 후 다음 명령어를 실행하려 확인

$ kubectl get nodes
