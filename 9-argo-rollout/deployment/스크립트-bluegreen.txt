## blue/green 수동 배포

# 서비스, blue앱 배포 : active, preview 모두 blue로 라우팅
kubectl apply -f svc-active.yaml
kubectl apply -f svc-preview.yaml
kubectl apply -f deploy-blue.yaml

# k get svc 명령어로 active, preview 서비스의 IP 확인
stepano@stepanowon:~/rollout/deployment/bluegreen$ k get svc
NAME          TYPE           CLUSTER-IP       EXTERNAL-IP     PORT(S)        AGE
kubernetes    ClusterIP      10.96.0.1        <none>          443/TCP        2d14h
svc-active    LoadBalancer   10.111.19.228    192.168.56.52   80:32603/TCP   4s
svc-preview   LoadBalancer   10.109.173.189   192.168.56.53   80:31816/TCP   3s

# 브라우저 열어서 두개의 서비스 주소로 요청 해봄
모두 blue(1.0.0)실행

# green앱(2.0.0) 배포하고 preview를 2.0.0으로 향하도록 조정
kubectl apply -f deploy-green.yaml
kubectl patch svc svc-preview -p '{"spec":{"selector":{"app":"nodeapp-green"} } }'

# 이제 active 서비스는 blue(1.0.0)으로 라우팅하고, preview 서비스는 green(2.0.0) 으로 라우팅함
# green이 정상작동함을 확인한 후 실사용자 트래픽(active)을 green 으로 전달하도록 서비스 수정
kubectl patch svc svc-active -p '{"spec":{"selector":{"app":"nodeapp-green"} } }'

# 리소스 정리리
kubectl delete -f svc-active.yaml
kubectl delete -f svc-preview.yaml
kubectl delete -f deploy-blue.yaml
kubectl delete -f deploy-green.yaml

